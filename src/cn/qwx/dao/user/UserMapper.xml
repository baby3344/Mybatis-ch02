<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org//dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.qwx.dao.user.UserMapper">
    <!--根据用户名称查询用户列表(模糊查询)-->
    <select id="getUserListyName" resultType="User" parameterType="String">
        select * from smbms_user where userName like CONCAT ('%',#{userName},'%')
    </select>
    <!--示例3-->
   <select id="getUserList" resultType="User" parameterType="User">
       select * from smbms_user where userName like CONCAT ('%',#{userName},'%')
       and userRole=#{userRole}
   </select>

    <!--根据用户名称查询用户列表（Map）-->
    <select id="getUserListByMap" resultType="User" parameterType="Map">
        select * from smbms_user where userName like CONCAT ('%',#{uName},'%')
        and userRole=#{uRole}
    </select>

    <!--根据用户名称查询用户列表（示例8）-->
    <select id="getUserList1" resultMap="userList" parameterType="User">
        select u.*,r.roleName from smbms_user u,smbms_role r
        where userName like CONCAT ('%',#{userName},'%')
        and u.userRole=#{userRole} and u.userRole=r.id
    </select>
    <!--示例9-->
    <resultMap id="userList" type="User">
        <result property="id" column="id"/>
        <result property="userCode" column="userCode"/>
        <result property="userName" column="userName"/>
        <result property="phone" column="phone"/>
        <result property="birthday" column="birthday"/>
        <result property="gender" column="gender"/>
        <result property="userRole" column="userRole"/>
        <result property="userRoleName" column="roleName"/>
    </resultMap>

    <!--新增用户-->
    <insert id="add" parameterType="User">
        insert into smbms_user (userCode,userName,userPassword,gender,birthday,
        phone,address,userRole,createdBy,creationDate)
        values (#{userCode},#{userName},#{userPassword},#{gender},
        #{birthday},#{phone},#{address},#{userRole},
        #{createdBy},#{creationDate})
    </insert>

    <!--修改用户-->
    <update id="modify" parameterType="User">
        update smbms_user set userCode=#{userCode},userName=#{userName},
        userPassword=#{userPassword},gender=#{gender},
        phone=#{phone},address=#{address},userRole=#{userRole},
        modifyDate=#{modifyDate},birthday=#{birthday}
        where id=#{id}
    </update>

    <!--修改当前用户密码-->
    <update id="updatePwd" >
        update smbms_user set userPassword=#{userPassword} where id=#{id}
    </update>

    <!--根据ID删除用户-->
    <delete id="deleteUserById" parameterType="Integer">
       delete from smbms_user where id=#{id}
    </delete>

    <!--示例20-->
    <!--<resultMap id="userRoleResult" type="User">
        <id property="id" column="id"/>
        <result property="userCode" column="userCode"/>
        <result property="userName" column="userName"/>
        <result property="userRole" column="userRole"/>
        <association property="role" javaType="Role">
            <id property="id" column="r_id"/>
            <result property="roleCode" column="roleCode"/>
            <result property="roleName" column="roleName"/>
        </association>
    </resultMap>-->



    <!--示例22-->
    <resultMap id="userRoleResult" type="User">
        <id property="id" column="id"/>
        <result property="userCode" column="userCode"/>
        <result property="userName" column="userName"/>
        <result property="userRole" column="userRole"/>
        <association property="role" javaType="Role" resultMap="roleResult"/>
    </resultMap>
    <resultMap id="roleResult" type="Role">
            <id property="id" column="r_id"/>
            <result property="roleCode" column="roleCode"/>
            <result property="roleName" column="roleName"/>
    </resultMap>
    <select id="getUserListByRoleId" parameterType="Integer" resultMap="userRoleResult">
        select u.*,r.id as r_id,r.roleCode,r.roleName
        from smbms_user u,smbms_role r
        where u.userRole=#{userRole} and u.userRole=r.id
    </select>

    <!--示例24-->
    <!--<resultMap id="userAddressResult" type="User">
        <id property="id" column="id"/>
        <result property="userCode" column="userCode"/>
        <result property="userName" column="userName"/>
        <collection property="addressList" ofType="Address">
            <id property="id" column="a_id"/>
            <result property="postCode" column="postCode"/>
            <result property="tel" column="tel"/>
            <result property="contact" column="contact"/>
            <result property="addressDesc" column="addressDesc"/>
        </collection>
    </resultMap>
    <select id="getAddressListByUserId" parameterType="Integer" resultMap="userAddressResult">
        select u.*,a.id as a_id,a.contact,a.addressDesc,a.postCode,a.tel
        from smbms_user u,smbms_address a
        where u.id=a.userId and u.id=#{id}
    </select>-->

    <!--示例26-->
    <resultMap id="userAddressResult" type="User">
       <id property="id" column="id"/>
       <result property="userCode" column="userCode"/>
       <result property="userName" column="userName"/>
       <collection property="addressList" ofType="Address" resultMap="addressResult"/>
   </resultMap>
   <resultMap id="addressResult" type="Address">
       <id property="id" column="a_id"/>
       <result property="postCode" column="postCode"/>
       <result property="tel" column="tel"/>
       <result property="contact" column="contact"/>
       <result property="addressDesc" column="addressDesc"/>
   </resultMap>
   <select id="getAddressListByUserId" parameterType="Integer" resultMap="userAddressResult">
       select u.*,a.id as a_id,a.contact,a.addressDesc,a.postCode,a.tel
       from smbms_user u,smbms_address a
       where u.id=a.userId and u.id=#{id}
   </select>

    <!--根据用户名称查询用户列表（ch03示例2）-->
    <select id="getUserList2" resultMap="userList" >
        select u.*,r.roleName from smbms_user u,smbms_role r
        where u.userRole=r.id
        <if test="userRole!=null">
            and u.userRole=#{userRole}
        </if>
        <if test="userName!=null">
            and userName like CONCAT ('%',#{userName},'%')
        </if>
    </select>

    <!--(ch03)示例where-->
    <select id="getUserList3" resultType="User">
        select * from smbms_user
        <where>
        <if test="userName!=null and userName!=''">
            userName like CONCAT('%',#{userName},'%')
        </if>
        <if test="userRole!=null">
            and userRole=#{userRole}
        </if>
        </where>
    </select>

    <!--(ch03)示例if+trim+-->
    <select id="getUserList4" resultType="User">
        select * from smbms_user
        <trim prefix="where" prefixOverrides="and | or">
            <if test="userName!=null and userName!=''">
                userName like CONCAT('%',#{userName},'%')
            </if>
            <if test="userRole!=null">
                and userRole=#{userRole}
            </if>
        </trim>
    </select>

    <!--(ch03)修改用户if+set-->
    <update id="modify1" parameterType="User">
        update smbms_user
        <set>
            <if test="userCode!=null">userCode=#{userCode},</if>
            <if test="userName!=null"> userName=#{userName},</if>
            <if test="userPassword!=null"> userPassword=#{userPassword},</if>
            <if test="gender!=null"> gender=#{gender},</if>
            <if test="phone!=null">phone=#{phone},</if>
            <if test="address!=null"> address=#{address},</if>
            <if test="userRole!=null">userRole=#{userRole},</if>
            <if test="birthday!=null"> birthday=#{birthday}</if>
            <if test="modifyDate!=null"> modifyDate=#{modifyDate},</if>
        </set>
        where id=#{id}
    </update>

    <!--(ch03)修改用户if+trim改造修改操作-->
    <update id="modify2" parameterType="User">
        update smbms_user
        <trim prefix="set" suffixOverrides="," suffix="where id=#{id}">
            <if test="userCode!=null">userCode=#{userCode},</if>
            <if test="userName!=null"> userName=#{userName},</if>
            <if test="userPassword!=null"> userPassword=#{userPassword},</if>
            <if test="gender!=null"> gender=#{gender},</if>
            <if test="phone!=null">phone=#{phone},</if>
            <if test="address!=null"> address=#{address},</if>
            <if test="userRole!=null">userRole=#{userRole},</if>
            <if test="birthday!=null"> birthday=#{birthday}</if>
            <if test="modifyDate!=null"> modifyDate=#{modifyDate},</if>
        </trim>
    </update>

    <!--根据用户角色列表，获取该角色列表下用户信息列表_foreach_array-->
    <select id="getUserByRoleId_foreach_array" resultMap="userMapByRole">
        select * from smbms_user where userRole in
        <foreach collection="array" item="roleIds"
                 open="(" separator="," close=")">
            #{roleIds}
        </foreach>
    </select>
    <resultMap id="userMapByRole" type="User">
        <id property="id" column="id"/>
        <result property="userCode" column="userCode"/>
        <result property="userName" column="userName"/>
        <result property="userRole" column="userRole"/>
    </resultMap>

    <!--根据用户角色列表，获取该角色列表下用户信息列表_foreach_list-->
    <select id="getUserByRoleId_foreach_list" resultMap="userMapByRole">
        select * from smbms_user where userRole in
        <foreach collection="list" item="roleList"
                 open="(" separator="," close=")">
            #{roleIds}
        </foreach>
    </select>
</mapper>